version: '3.8' 

services:
  traffic-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: Backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - NODE_ENV=development
      - MYSQL_HOST=mysql_db
      - MYSQL_PORT=3306
      - MYSQL_USER=deuser
      - MYSQL_PASSWORD=default@2025!
      - MYSQL_DBNAME=traffic_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_JWT_SECRET=your-secret-key
      - SALT_PASSWORD=10
    volumes:
      - ./src:/usr/src/app/src
      - ./package.json:/usr/src/app/package.json
    depends_on:
      mysql_db:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql_db:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: traffic_db
      MYSQL_USER: deuser
      MYSQL_PASSWORD: default@2025!
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./mysql/mysqlCore.sql:/docker-entrypoint-initdb.d/mysqlCore.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s

volumes:
  mysql_data:
  redis_data:

# Start the services with:
# docker-compose -f docker-compose.yml up --build -d


#TODO : read env file from .env like ${ENV}